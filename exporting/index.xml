<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Exporting / Publishing on PinGod AddOns</title><link>https://FlippingFlips.github.io/pingod-addons/exporting/</link><description>Recent content in Exporting / Publishing on PinGod AddOns</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 26 Dec 2022 15:26:15 +0000</lastBuildDate><atom:link href="https://FlippingFlips.github.io/pingod-addons/exporting/index.xml" rel="self" type="application/rss+xml"/><item><title>Exporting</title><link>https://FlippingFlips.github.io/pingod-addons/exporting/exports/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/exporting/exports/</guid><description>Also See BasicGame - Simulator Export
Exporting Game Command line Use the bat files export for steps. See Godot Export You only need to build the full export once. The executable will always be the same size, but the pack file will be different. Pack executable size Shrink the executable 40 &amp;gt; 10mb with the _build_upx_shrink_executable.bat in the Build folder.
You will need UPX Ultimate Packer for eXecutables</description></item><item><title>C# Pcks Are Large...</title><link>https://FlippingFlips.github.io/pingod-addons/exporting/csharp-large-exports/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/exporting/csharp-large-exports/</guid><description>This doesn&amp;rsquo;t apply if you decide to have a single executable and pck, so you can skip this
When a project uses mono C# it includes mono assembilies which are around 29mb.
If you try to export the assets only from this project, then you will always have the c# files.
Link the assets into BasicGamePck One method is to use the BasicGamePck/project.godot project. This project is empty, no scenes or scripts.</description></item></channel></rss>