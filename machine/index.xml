<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Machine on PinGod AddOns</title><link>https://FlippingFlips.github.io/pingod-addons/machine/</link><description>Recent content in Machine on PinGod AddOns</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 26 Dec 2022 15:26:15 +0000</lastBuildDate><atom:link href="https://FlippingFlips.github.io/pingod-addons/machine/index.xml" rel="self" type="application/rss+xml"/><item><title>Adding Switches - PinGodGame.tscn</title><link>https://FlippingFlips.github.io/pingod-addons/machine/adding-switches/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/machine/adding-switches/</guid><description>The following are the default switches in the BasicGameGodot\PinGodGame.tscn file.
When created in the Godot interface, they are saved in this scene file.
You can add your switches here.
_switches = { &amp;quot;coin&amp;quot;: 2, &amp;quot;down&amp;quot;: 5, &amp;quot;enter&amp;quot;: 7, &amp;quot;exit&amp;quot;: 4, &amp;quot;flipper_l&amp;quot;: 11, &amp;quot;flipper_r&amp;quot;: 9, &amp;quot;inlane_l&amp;quot;: 22, &amp;quot;inlane_r&amp;quot;: 23, &amp;quot;mball_saucer&amp;quot;: 27, &amp;quot;outlane_l&amp;quot;: 21, &amp;quot;outlane_r&amp;quot;: 24, &amp;quot;plunger_lane&amp;quot;: 20, &amp;quot;slam_tilt&amp;quot;: 16, &amp;quot;sling_l&amp;quot;: 25, &amp;quot;sling_r&amp;quot;: 26, &amp;quot;start&amp;quot;: 19, &amp;quot;tilt&amp;quot;: 17, &amp;quot;trough_1&amp;quot;: 81, &amp;quot;trough_2&amp;quot;: 82, &amp;quot;trough_3&amp;quot;: 83, &amp;quot;trough_4&amp;quot;: 84, &amp;quot;up&amp;quot;: 6 } It can be faster than the Godot inspector and adding, especially when your switch collection builds up.</description></item><item><title>Adding Actions - Project Settings</title><link>https://FlippingFlips.github.io/pingod-addons/machine/adding-godot-actions/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/machine/adding-godot-actions/</guid><description>Godot Actions - Window inputs Godot uses Actions and we can use the input map to map switches / actions to them.
In the projects Input Map add switches to keys like the example below.
sw20-27 are unassigned, but sw19 is set to 1, which is the default start button.
This start button action 19 (sw19) is checked states in the PinGodGame.cs._Input
This switch is in the GameWindowSwitches collection which is set in the PinGodGame.</description></item><item><title>Using Switches C#</title><link>https://FlippingFlips.github.io/pingod-addons/machine/usingswitches/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/machine/usingswitches/</guid><description>Using in game scene c# scripts Connect to a SwitchCommand. Only needs to be done once in EnterTree
//Godot Enter Tree Override. Get pingod and connect to a SwitchCommand signal on it public override void _EnterTree() { pinGod = GetNode(&amp;quot;/root/PinGodGame&amp;quot;) as PinGodGame; pinGod.Connect(nameof(SwitchCommand), this, nameof(SwitchCommandHandler)); } Create handler.
//do stuff on switches. this example just acts when switch is on private void SwitchCommandHandler(string swName, byte index, byte value) { if (!</description></item><item><title>Using Switches (Controller)</title><link>https://FlippingFlips.github.io/pingod-addons/machine/usingswitchescontroller/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/machine/usingswitchescontroller/</guid><description>Auto Switch handlers (No scripting) In the BasicGame, Visual Pinball table switches are added to a simulator collection named AllSwitches.
Add the switch number to the TimerInterval box in the Misc settings to 20 and add the switch to the AllSwitches collection.
All VP table objects should be covered, so you wouldn&amp;rsquo;t have to remember to use Spin instead of Hit for a spinner in the collection. (Scripting) Visual Pinball - Switch On / Off Sub sw_plunger_lane_hit() : Controller.</description></item><item><title>Using Coils (C#)</title><link>https://FlippingFlips.github.io/pingod-addons/machine/usingcoils/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/machine/usingcoils/</guid><description>Coils can be On, Off or Pulsed. Get a reference to pinGod and use methods with name.
pinGod.SolenoidPulse(&amp;quot;trough&amp;quot;, 225); pinGod.SolenoidOn(&amp;quot;trough&amp;quot;, 1); pinGod.SolenoidOn(&amp;quot;trough&amp;quot;, 0); pinGod.SolenoidPulse(&amp;quot;auto_plunger&amp;quot;)// Pulse the auto plunger pinGod.SolenoidOn(&amp;quot;flippers&amp;quot;, 1) // enable the flippers</description></item><item><title>Using Coils (Controller)</title><link>https://FlippingFlips.github.io/pingod-addons/machine/usingcoilscontroller/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/machine/usingcoilscontroller/</guid><description>Visual Pinball SolCallbacks When Visual Pinball detects changed coils the callbacks are invoked by coil number.
The script example to handle coil 35 would be SolCallback(35) = &amp;quot;Lampshow2&amp;quot;. This will invoke the LampShow2 sub routine (if you have one)
SolCallback(0) = &amp;quot;Alive&amp;quot; ' If at some point Godot closes then this lets VP know about it SolCallback(1) = &amp;quot;bsTrough.solOut&amp;quot; ' The trough which makes the ball pop out.... SolCallback(2) = &amp;quot;FlippersEnabled&amp;quot; ' Enable and disable flippers, when ball drains, tilt etc Some standard callbacks for default game</description></item></channel></rss>