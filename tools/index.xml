<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools / Controls on PinGod AddOns</title><link>https://FlippingFlips.github.io/pingod-addons/tools/</link><description>Recent content in Tools / Controls on PinGod AddOns</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 26 Dec 2022 15:26:15 +0000</lastBuildDate><atom:link href="https://FlippingFlips.github.io/pingod-addons/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>BallStackPinball (Timer)</title><link>https://FlippingFlips.github.io/pingod-addons/tools/ballstackpinball/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/tools/ballstackpinball/</guid><description>Basic way to use a Timer as a Saucer or Kicker, the scene using this control should connect to the switch signals sent from them. See BasicGame
Tool: BallStackPinball derives from a Timer and can be used in scenes and adding them from filtering in the Godot editor.
Exports Coil = coil sname to pulse Switch = switch name that activates One Shot = true Autostart = false
Godot - Overrides BALL_SAVE_SCENE = &amp;ldquo;res://addons/PinGodGame/Modes/ballsave/BallSave.</description></item><item><title>BlinkingLabel (Label)</title><link>https://FlippingFlips.github.io/pingod-addons/tools/blinkinglabel/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/tools/blinkinglabel/</guid><description>A label that blinks on a timer with optional methods for controlling the blink</description></item><item><title>PinballLanesNode (PinGodGameMode:Node)</title><link>https://FlippingFlips.github.io/pingod-addons/tools/pinballlanesnode/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/tools/pinballlanesnode/</guid><description>Set the exports in the scene from Godot or tscn. and other options.</description></item><item><title>PinballTargetsBank (Node)</title><link>https://FlippingFlips.github.io/pingod-addons/tools/pinballtargetsbank/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/tools/pinballtargetsbank/</guid><description>Handles a bank of targets, the light states and watches for completion</description></item><item><title>VideoPlayerPinball (VideoPlayer)</title><link>https://FlippingFlips.github.io/pingod-addons/tools/videoplayerpinball/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/tools/videoplayerpinball/</guid><description>VideoPlayerPinball (AddOn) This helper node for video has options to set looping and other in the inspector when added to the tree.
Tool: This can be added with Create New Node and searching in godot editor for control VideoPlayerPinball
Adding VideoPlayerPinball to Attract Mode 1. Using a duplicated BasicGame as starter project Open project with Godot Find the Attract.tscn in the addons res://addons/Modes/attract, right click and duplicate and give it a name, CustomAttract.</description></item><item><title>Creating custom playfield switch window</title><link>https://FlippingFlips.github.io/pingod-addons/tools/playfield-switch-window/</link><pubDate>Mon, 26 Dec 2022 15:26:15 +0000</pubDate><guid>https://FlippingFlips.github.io/pingod-addons/tools/playfield-switch-window/</guid><description>In Godot with your project open:
Filter the Files to show playfield, you should see PlayfieldWindow and playfield_control Duplicate the playfield_control.tscn and name like playfield_control_mygamename.tscn Duplicate the PlayfieldWindow.tscn and name like PlayfieldWindowMyGame.tscn Now right click the duplicated files and move to res://autoload. Could be anywhere, but easy to put here and find. Open your PlayfieldWindowMyGame.tscn and set the Scene under WindowPinGod in the inspector to your playfield_control_mygamename.tscn In your custom res://Machine.</description></item></channel></rss>