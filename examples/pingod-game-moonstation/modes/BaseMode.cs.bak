using Godot;
using static MoonStation.GameGlobals;
using static PinGodBase;

/// <summary>
/// A base mode is a mode that is generally always running.
/// </summary>
public class BaseMode : Control
{
    private PackedScene _ballSaveScene;

    /// <summary>
    /// Where our ball scene save is. This is set to use the default from the addons but here to easily be swapped out. * Exported variables can be changed in Godots scene inspector
    /// </summary>
    [Export] string BALL_SAVE_SCENE = "res://addons/PinGodGame/Scenes/BallSave.tscn";
	private Game game;
    private MsPinGodGame pinGod;
	public override void _EnterTree()
	{
		pinGod = GetNode("/root/PinGodGame") as MsPinGodGame;
		game = GetParent().GetParent() as Game;

		_ballSaveScene = GD.Load<PackedScene>(BALL_SAVE_SCENE);

		pinGod.Connect(nameof(SwitchCommand), this, nameof(SwitchCommandHandler));
	}

    private void AddPointsPlaySound(int sMALL_SCORE)
    {
        pinGod.AddPoints(sMALL_SCORE);
        pinGod.AudioManager.PlaySfx("spinner");
    }

    /// <summary>
    /// Adds a ball save scene to the tree and removes
    /// </summary>
    /// <param name="time">removes the scene after the time</param>
    private void DisplayBallSaveScene(float time = 2f)
    {
        var ballSaveScene = _ballSaveScene.Instance<BallSave>();
        ballSaveScene.SetRemoveAfterTime(time);
        AddChild(_ballSaveScene.Instance());
    }

    /// <summary>
    /// Helper to start MultiBall. Set the game to "IsMultiballRunning", fire the saucer coil to exit ball, add a scene
    /// </summary>
    private void StartMultiball()
    {
        if (!pinGod.IsMultiballRunning)
        {
            pinGod.IsMultiballRunning = true;
            pinGod.SolenoidPulse("mball_saucer");

            //add the multiball scene from the game
            game?.CallDeferred("AddMultiballSceneToTree");
        }
        else
        {
            //already in multiball
            pinGod.SolenoidPulse("mball_saucer");
        }
    }

    /// <summary>
    /// simple add points and play a single sound
    /// </summary>
    /// <param name="swName"></param>
    /// <param name="index"></param>
    /// <param name="value"></param>
    private void SwitchCommandHandler(string swName, byte index, byte value)
    {
        if (!pinGod.GameInPlay || pinGod.IsTilted) return;
        if (value > 0)
		{
            bool isSwOn = pinGod.IsSwitchEnabled(swName);

            switch (swName)
			{
				case "inlane_l":					
                case "inlane_r":
                case "bumper_l":
                case "bumper_r":
                    AddPointsPlaySound(SMALL_SCORE);
                    break;
                case "outlane_r":
                case "outlane_l":
                    AddPointsPlaySound(MED_SCORE);
                    break;
                case "sling_l":
                case "sling_r":
                case "spinner":
                    AddPointsPlaySound(MIN_SCORE);
                    break;
				case "top_left_target":
                    AddPointsPlaySound(LARGE_SCORE);
                    break;
                default:
					break;
			}
		}		
    }
	#region Mode Group Methods

	//This mode is added to a group named Group in the BaseMode scene
	//These methods will be called by the game if the the scene is in the "Mode" group

	public void OnBallDrained() { }
	public void OnBallSaved()
	{
		pinGod.LogDebug("base: ball_saved");
		if (!pinGod.IsMultiballRunning)
		{
			pinGod.LogDebug("ballsave: ball_saved");

			//add ball save scene to tree and remove after 2 secs;
			CallDeferred(nameof(DisplayBallSaveScene), 2f);
		}
		else
		{
			pinGod.LogDebug("skipping save display in multiball");
		}
	}

	/// <summary>
	/// When ball is started
	/// </summary>
	public void OnBallStarted()
	{
		pinGod.LogInfo("game: ball started");
		if (pinGod.AudioManager.MusicEnabled)
		{
			pinGod.AudioManager.PlayMusic(pinGod.AudioManager.Bgm);
		}
	}
	public void UpdateLamps() { }
	#endregion
}
