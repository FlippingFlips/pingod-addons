# Builds the addons for download. End user can import the zip into Godot.
# push a tag to build
on: 
  push:
   #branches: [godot-4.1.1]
   tags:
      - "v*"
jobs:
  # job id, can be anything
  export_game:
    runs-on: ubuntu-latest
    # Add permission for release creation.
    permissions: write-all
    # Job name, can be anything
    name: Export Game
    steps:
    - name: checkout
      uses: actions/checkout@v3.3.0

    # Copy readme and zip addons directory to release
    - name: zip addons
      run: |
        cp README.md addons/README-PINGOD.md        
        7z a -tzip "pingod-addons-(${{ github.ref_name }}).zip" "addons"
      
    - name: godot-export
      id: export
      # Use latest version (see releases for all versions)
      uses: firebelley/godot-export@v5.2.0
      with:        
        cache: true # cache the Godot export templates and Godot executable
        # Defining all the required inputs
        godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/4.3/mono/Godot_v4.3-stable_mono_linux_x86_64.zip
        godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/4.3/mono/Godot_v4.3-stable_mono_export_templates.tpz
        relative_project_path: ./        
        archive_output: false # don't archive output, we take care of it
        #wine_path: ${{ steps.wine_install.outputs.WINE_PATH }} # Icons work without using wine - Dave
  
    - name: check built files
      run: |
        #dir /home/runner/.local/share/godot/builds/win/win.exe        
        dir /home/runner/.local/share/godot/builds
        dir /home/runner/.local/share/godot/builds/win

    # pack the executable, 70mb without
    - name: Run UPX Pack Exe
      uses: crazy-max/ghaction-upx@v3
      with:
          version: latest
          files: |
            /home/runner/.local/share/godot/builds/win/win.exe
          args: -fq

    # zip all needed files to run the game out of the box
    - name: Zip windows game build
      run: | 
          
          # zip game folder
          7z a -tzip "pingod-addons-gamebuild--(${{ github.ref_name }}).zip" "/home/runner/.local/share/godot/builds/win/*"
          
          # zip VP files
          7z a -tzip "pingod-addons-gamebuild--(${{ github.ref_name }}).zip" "simulators/visual-pinball/pingodaddons-demo.vpx"
          7z a -tzip "pingod-addons-gamebuild--(${{ github.ref_name }}).zip" "simulators/visual-pinball/pingodaddons-demo.vbs"
          7z a -tzip "pingod-addons-gamebuild--(${{ github.ref_name }}).zip" "simulators/visual-pinball/README.md"

    #  # This release action has worked well for me. However, you can most likely use any release action of your choosing.
    #  # https://github.com/ncipollo/release-action
    - name: create release
      uses: ncipollo/release-action@v1.12.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}        
        generateReleaseNotes: false
        tag: ${{ github.ref_name }}
        artifacts: ${{ steps.export.outputs.archive_directory }}/*, pingod-addons-(${{ github.ref_name }}).zip, pingod-addons-gamebuild--(${{ github.ref_name }}).zip
